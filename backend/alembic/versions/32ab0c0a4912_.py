"""empty message

Revision ID: 32ab0c0a4912
Revises: 
Create Date: 2023-07-18 23:32:01.890568

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '32ab0c0a4912'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('matric_no', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_id'), 'student', ['id'], unique=False)
    op.create_table('grades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.String(length=10), nullable=True),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_grades_id'), 'grades', ['id'], unique=False)
    op.create_index(op.f('ix_grades_student_id'), 'grades', ['student_id'], unique=False)
    op.drop_index('ix_profiles_id', table_name='profiles')
    op.drop_table('profiles')
    op.add_column('admin', sa.Column('password_hash', sa.String(length=60), nullable=False))
    op.add_column('admin', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('admin', 'last_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('admin', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('exams', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('exams', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('questions', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('questions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('topics', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('topics', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('topics', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('topics', 'updated_at')
    op.alter_column('questions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('questions', 'updated_at')
    op.alter_column('exams', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('exams', 'updated_at')
    op.alter_column('admin', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('admin', 'last_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.drop_column('admin', 'updated_at')
    op.drop_column('admin', 'password_hash')
    op.create_table('profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='profiles_pkey')
    )
    op.create_index('ix_profiles_id', 'profiles', ['id'], unique=False)
    op.drop_index(op.f('ix_grades_student_id'), table_name='grades')
    op.drop_index(op.f('ix_grades_id'), table_name='grades')
    op.drop_table('grades')
    op.drop_index(op.f('ix_student_id'), table_name='student')
    op.drop_table('student')
    # ### end Alembic commands ###
